-- Write queries to return the following:
-- The following changes are applied to the "dvdstore" database.**

-- Frank suggests making the entire exercise one transaction
-- because several exercises depend on previous exercises running
-- if you try to make smaller transactions, Frank says you will drive yourself nuts
-- put a begin transaction at the start and a rollback at the end until you are sure everything works
-- ignore #12 until tomorrow...if you can't look at the end of today's lecture code
-- consider running verify selects before and/or after your inserts, update, deletes
-- your changes will NOT be in the table if you do a rollback

-- be sure you know what the data types and contents of the columns are
-- consider that some columns are generated by the database on insert (you don't need or want to specify them, but you may need to know what they are)
-- use subqueries

-- 

begin transaction;

-- 1. Add actors, Hampton Avenue, and Lisa Byway to the actor table.

--select first_name, last_name
--from actor
--where first_name = 'Hampton'
--or first_name = 'Lisa';

insert into actor (first_name, last_name)
values ('HAMPTON', 'AVENUE');

insert into actor (first_name, last_name)
values ('LISA', 'BYWAY');

--select first_name, last_name
--from actor
--where first_name = 'Hampton'
--or first_name = 'Lisa';

-- 2. Add "Euclidean PI", "The epic story of Euclid as a pizza delivery boy in
-- ancient Greece", to the film table. The movie was released in 2008 in English.
-- Since its an epic, the run length is 3hrs and 18mins. There are no special
-- features, the film speaks for itself, and doesn't need any gimmicks.

-- select * from film where title ='Euclidean PI';

insert into film (title, description, release_year, language_id, original_language_id, length)
values ('Euclidean PI', 'The epic story of Euclid as a pizza delivery boy in
 ancient Greece', 2008, (select language_id from language where name = 'English'), (select language_id from language where name = 'English'), 198);

-- select * from film where title ='Euclidean PI';


-- 3. Hampton Avenue plays Euclid, while Lisa Byway plays his slightly
-- overprotective mother, in the film, "Euclidean PI". Add them to the film.

-- select * from film_actor where film_id = (select film_id from film where title = 'Euclidean PI');

insert into film_actor (actor_id, film_id)
values ((select actor_id from actor where last_name = 'AVENUE'), (select film_id from film where title = 'Euclidean PI'));

insert into film_actor (actor_id, film_id)
values ((select actor_id from actor where last_name = 'BYWAY'), (select film_id from film where title = 'Euclidean PI'));

-- select * from film_actor where film_id = (select film_id from film where title = 'Euclidean PI');


-- 4. Add Mathmagical to the category table.

-- select * from category;

insert into category (name)
values ('Mathmagical');

-- select * from category;

-- 5. Assign the Mathmagical category to the following films, "Euclidean PI",
-- "EGG IGBY", "KARATE MOON", "RANDOM GO", and "YOUNG LANGUAGE"

--select *
--from film_category
--where category_id = (select category_id from category where name = 'Mathmagical');

insert into film_category (film_id, category_id)
values ((select film_id from film where title = 'Euclidean PI'), (select category_id from category where name = 'Mathmagical'));

update film_category
set category_id = (select category_id from category where name = 'Mathmagical')
where film_id in ((select film_id from film where title = 'EGG IGBY'), 
(select film_id from film where title = 'KARATE MOON'), 
(select film_id from film where title = 'RANDOM GO'), 
(select film_id from film where title = 'YOUNG LANGUAGE'));

--select *
--from film_category
--where category_id = (select category_id from category where name = 'Mathmagical');


-- 6. Mathmagical films always have a "G" rating, adjust all Mathmagical films
-- accordingly.
-- (5 rows affected)

-- tightly coupled answer
--update film
--set rating = 'G'
--where title in ('Euclidean PI', 'EGG IGBY', 'KARATE MOON', 'RANDOM GO', 'YOUNG LANGUAGE');

--loosely coupled answer
update film
set rating = 'G'
where title in ((SELECT title from film where film_id in (select film_id from film_category where category_id in (select category_id from category where name = 'Mathmagical'))));



-- 7. Add a copy of "Euclidean PI" to all the stores.

-- 8. The Feds have stepped in and have impounded all copies of the pirated film,
-- "Euclidean PI". The film has been seized from all stores, and needs to be
-- deleted from the film table. Delete "Euclidean PI" from the film table.
-- (Did it succeed? Why?)
-- <YOUR ANSWER HERE>

-- 9. Delete Mathmagical from the category table.
-- (Did it succeed? Why?)
-- <YOUR ANSWER HERE>

-- 10. Delete all links to Mathmagical in the film_category tale.
-- (Did it succeed? Why?)
-- <YOUR ANSWER HERE>

-- 11. Retry deleting Mathmagical from the category table, followed by retrying
-- to delete "Euclidean PI".
-- (Did either deletes succeed? Why?)
-- <YOUR ANSWER HERE>

-- 12. Check database metadata to determine all constraints of the film id, and
-- describe any remaining adjustments needed before the film "Euclidean PI" can
-- be removed from the film table.


rollback;